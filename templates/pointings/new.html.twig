<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>KnD Temps | Interface de Pointage</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        <meta name="description" content="Login">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no, minimal-ui">
        <!-- Call App Mode on ios devices -->
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <!-- Remove Tap Highlight on Windows Phone IE -->
        <meta name="msapplication-tap-highlight" content="no">
        <!-- base css -->
        <link rel="stylesheet" media="screen, print" href="/css/vendors.bundle.css">
        <link rel="stylesheet" media="screen, print" href="/css/app.bundle.css">
        <link rel="stylesheet" media="screen, print" href="/css/icons.css">
        <!-- App favicon -->
        <!-- Place favicon.ico in the root directory -->
        {# <link rel="apple-touch-icon" sizes="180x180" href="/img/favicon/apple-touch-icon.png"> #}
        <link rel="icon" type="image/png" sizes="32x32" href="/img/favicon/KnDTemps.ico">
        {# <link rel="mask-icon" href="/img/favicon/safari-pinned-tab.svg" color="#5bbad5"> #}

        <!-- Optional: page related CSS-->
        <link rel="stylesheet" media="screen, print" href="/css/page-login.css">
        <link rel="stylesheet" media="screen, print" href="/css/notifications/sweetalert2/sweetalert2.bundle.css">
        <link rel="stylesheet" media="screen, print" href="/css/theme-demo.css">

        {# <style type="text/css">
            .jqstooltip {
                position: absolute;
                left: 0px;
                top: 0px;
                visibility: hidden;
                background: rgb(0, 0, 0) transparent;
                background-color: rgba(0,0,0,0.6);
                filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);
                -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)";
                color: white;
                font: 10px arial, sans-serif;
                text-align: left;
                white-space: nowrap;
                padding: 5px;
                border: 1px solid white;
                box-sizing: content-box;
                z-index: 10000;
            }
            .jqsfield { 
                color: white;
                font: 10px arial, sans-serif;
                text-align: left;
            }
        </style> #}
    </head>

    <body class="account-body"{#class="mod-bg-1 "#}>
    {% set WtToDo = app.user.wtperday * WDNb %}
        <div class="blankpage-form-field width-mobile-auto mt-4 ">{# expand-full-width-on-mobile height-mobile-auto expand-full-height-on-mobile #}
            <div class="page-logo m-0 w-100 align-items-center justify-content-center rounded border-bottom-left-radius-0 border-bottom-right-radius-0 px-4">
                <a href="javascript:void(0)" class="page-logo-link press-scale-down d-flex align-items-center">
                    <img src="/img/KnDTemps.png" alt="KnD Temps WebApp" aria-roledescription="logo">
                    <span class="page-logo-text mr-1">KnD Temps WebApp</span>
                    <i class="fal fa-angle-down d-inline-block ml-1 fs-lg color-primary-300"></i>
                </a>
            </div>
            <div class="card p-4 border-top-left-radius-0 border-top-right-radius-0">
                
                {# <div class="alert alert-danger alert-dismissible fade d-none" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true"><i class="mdi mdi-close"></i></span>
                    </button>
                    <strong>An error has occurred, the username or password is invalid</strong> Change a few things up and try submitting again.
                </div> #}

                 <!-- app user menu -->
                <div>
                    {# <a href="#" data-toggle="dropdown" title="{{app.user.email}}" class="header-icon d-flex align-items-center justify-content-center ml-2">
                        <img src="{{ app.user.avatar != null  ? '/img/uploads/avatar/' ~ app.user.avatar : '/img/uploads/avatar/user.png' }}" class="profile-image rounded-circle" alt="{{app.user.firstName}} avatar">
                        <!-- you can also add username next to the avatar with the codes below: -->
                        <span class="ml-2 mr-1 text-truncate text-truncate-header hidden-xs-down">{{app.user.firstName}}</span>
                        <i class="ni ni-chevron-down hidden-xs-down"></i> 
                    </a> #}
                    <div class="">
                        {# <div class="text-center mb-2"><i><strong>Date Système : </strong> <span class="js-get-date"></span></i></div> #}
                        <div class="text-center mb-2"><i><strong class="text-primary fs-lg text-truncate text-truncate-lg ">{{app.user.enterprise.socialReason}}</strong></i></div>
                        <div class="text-center">BIENVENUE,</div>
                        <div class="d-flex flex-row py-4 rounded-top">
                            <div class="d-flex flex-row align-items-center mt-1 mb-1 color-white">
                                <span class="mr-2">
                                    <img src="{{ app.user.avatar != null  ? '/images/uploads/avatar/' ~ app.user.avatar : '/img/uploads/avatar/user.png' }}" class="rounded-circle profile-image" alt="{{app.user.firstName}} avatar" title={{app.user.email}}>
                                </span>
                                <div class="info-card-text text-dark">
                                    <div class="fs-lg text-truncate text-truncate-lg">{{app.user.grade}} {{app.user.fullName}}</div>
                                    {% if app.user.office != null %}<span class="text-truncate text-truncate-md opacity-80">{{app.user.office.name|capitalize}}</span>{% endif %}
                                </div>
                            </div>
                        </div>
                        <div class="dropdown-divider m-0"></div>
                        <div class="dropdown-item">
                            <div class="row text-primary mb-2">Pointage de Travail</div>
                            <div class="row align-items-center">
                                <div class="col">
                                    <div class="custom-control custom-switch">
                                        <input type="checkbox" class="custom-control-input" name="pointingInput" value="In" id="pointingIn" {% if nbPointing >= 1 %}disabled checked{% endif %}>
                                        <label class="custom-control-label" for="pointingIn">Entrée</label>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="custom-control custom-switch float-right">
                                        <input type="checkbox" class="custom-control-input" name="pointingInput" value="Out" id="pointingOut" {% if nbPointing <= 0 %}disabled{% elseif nbPointing >= 2  %}disabled checked{% endif %}>
                                        <label class="custom-control-label" for="pointingOut">Sortie</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="dropdown-divider m-0"></div>
                        <div class="dropdown-item">
                            <div class="row text-primary mb-2"><strong>Temps de Travail pour le Mois en Cours :</strong> </div>
                            <div class="panel-tag d-flex justify-content-center align-items-center">
                                <i class="text-primary fa fa-clock mr-2"></i> {{ totalWT }}
                                {# <ul>
                                    <li></li>
                                    <li>{{"Temps à réaliser: " ~ WtToDo ~":00:00"}}</li>
                                </ul> #}
                            </div>
                            <div class="row align-items-center">
                                {# <div class="col d-flex justify-content-center">
                                    <div class="demo">
                                        <div class="js-easy-pie-chart color-primary-400 position-relative d-inline-flex align-items-center justify-content-center" data-percent="{{ (totalWTInSecs / (WtToDo * 3600.0)) * 100 }}" data-piesize="80" data-linewidth="5" data-linecap="round" data-scalelength="5">
                                            <div class="d-flex flex-column align-items-center justify-content-center position-absolute pos-left pos-right pos-top pos-bottom fw-300 fs-lg">
                                                <span class="js-percent d-block text-dark"></span>
                                                <div class="d-block fs-xs text-dark opacity-70">
                                                    <small>%</small>
                                                </div>
                                            </div>
                                        </div>                                         
                                    </div>
                                    
                                </div> #}
                                {# {% if wtperday|length > 0 %}
                                {% set wtValues = "" %}
                                {% for index,wt in wtperday %}
                                    {% if index == 0 %}
                                        {% set wtValues = wtValues ~ wt %}
                                    {% else %}
                                        {% set wtValues = wtValues ~ "," ~ wt %}
                                    {% endif %}
                                {% endfor %}
                                <div class="col d-flex justify-content-center">
                                    <div class="p-3 w-auto d-inline-flex border-faded">
                                        <span class="sparklines" sparktype="bar" sparkbarcolor="#886ab5" values={{wtValues}}>
                                            <canvas width="100%" height="50" style="display: inline-block; width: 100%; height: 50; vertical-align: top;"></canvas>
                                        </span>
                                    </div>
                                </div>
                                {% endif %} #}
                            </div>
                        </div>
                    </div>
                </div>
                                          
                {# <form action="" id="js-login">
    
                    <div class="form-group">
                        <label for="username">Username</label>
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1"><i class="mdi mdi-account-outline font-16"></i></span>
                            </div>
                            <input type="text" class="form-control" name="_username" id="username" placeholder="Enter user email" value="{{username}}" required>
                        </div>                                    
                    </div>
                    
                    { <div class="form-group">
                        <label class="form-label" for="username">Username</label>
                        <input type="email" id="username" class="form-control" placeholder="your id or email" value="drlantern@gotbootstrap.com">
                        <span class="help-block">
                            Your unique username to app
                        </span>
                    </div> }
                    { <div class="form-group">
                        <label class="form-label" for="password">Password</label>
                        <input type="password" id="password" class="form-control" placeholder="password" value="password123">
                        <span class="help-block">
                            Your password
                        </span>
                    </div> }
                    <div class="form-group">
                        <label for="userpassword">Password</label>
                        <div class="input-group mb-3 ">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon2">
                                    <i class="mdi mdi-key font-16"></i>                    
                                </span>
                            </div>
                            <input type="password" class="form-control input-field" name="_password" id="password-field"  placeholder="Enter password" required>
                        </div>                                
                    </div>
                    
                    <div class="form-group mb-0 row">
                        <div class="col-12 mt-2" id="divBtn">
                            <button class="btn btn-primary btn-block waves-effect waves-light " id="LogInBtn" type="submit" >
                                <span class="spinner-border spinner-border-sm mr-1 d-none" role="status" aria-hidden="true"></span>
                                Log In <i class="fas fa-sign-in-alt ml-1"></i>
                            </button>
                        </div>
                    </div>  
                </form> #}
            </div>
            <div class="blankpage-footer">
                <span class="h4 float-right">
                    <a href="{% if app.user.roles[0] is not same as('ROLE_USER') %}{{path('employees_attendance_record')}}{% else %}#{% endif %}" id="continueLink"><strong>Continuez<i class="mdi mdi-arrow-right"></i></strong></a> {#| <a href="#"><strong>Register Account</strong></a>#}
                </span>
                <span class="h4 float-left">
                    <a href="{{path('account_logout')}}"><strong>Deconnexion<i class="fal fa-sign-out ml-2"></i></strong></a> {#| <a href="#"><strong>Register Account</strong></a>#}
                </span>
            </div>
        </div>
        {# <div class="login-footer p-2">
            <div class="row">
                <div class="col col-sm-12 text-center">
                    <i><strong>Date Système : </strong> <span class="js-get-date"></span></i>
                </div>
            </div>
        </div> #}

        <video poster="/img/backgrounds/clouds.png" id="bgvid" playsinline autoplay muted loop>
            <source src="/media/video/cc.webm" type="video/webm">
            <source src="/media/video/cc.mp4" type="video/mp4">
        </video>
        
        <!-- base vendor bundle: 
			 DOC: if you remove pace.js from core please note on Internet Explorer some CSS animations may execute before a page is fully loaded, resulting 'jump' animations 
						+ pace.js (recommended)
						+ jquery.js (core)
						+ jquery-ui-cust.js (core)
						+ popper.js (core)
						+ bootstrap.js (core)
						+ slimscroll.js (extension)
						+ app.navigation.js (core)
						+ ba-throttle-debounce.js (core)
						+ waves.js (extension)
						+ smartpanels.js (extension)
						+ src/../jquery-snippets.js (core) -->
        <script src="/js/vendors.bundle.js"></script>
        <script src="/js/app.bundle.js"></script>
        <!-- Page related scripts -->

        <!-- sparkline bundle: 
		+ jquery.sparkline.js (core)
		+ src/../jquery.sparkline.config.js (config) -->
        <script src="/js/statistics/sparkline/sparkline.bundle.js"></script>
        
        <script>
            /* 
             * draw the little mouse speed animated graph this just attaches a handler to the mousemove event to see
             * (roughly) how far the mouse has moved and then updates the display a couple of times a second via
             * setTimeout()
             */
            var drawMouseSpeedDemo = function()
            {
                var mrefreshinterval = 500, // update display every 500ms
                    lastmousex = -1,
                    lastmousey = -1,
                    lastmousetime,
                    mousetravel = 0,
                    mpoints = [],
                    mpoints_max = 30;

                $('html').mousemove(function(e)
                {
                    var mousex = e.pageX,
                        mousey = e.pageY;

                    if (lastmousex > -1)
                    {
                        mousetravel += Math.max(Math.abs(mousex - lastmousex), Math.abs(mousey - lastmousey));
                    }
                    lastmousex = mousex;
                    lastmousey = mousey;
                });

                var mdraw = function()
                {
                    var md = new Date();
                    var timenow = md.getTime();
                    if (lastmousetime && lastmousetime != timenow)
                    {
                        var pps = Math.round(mousetravel / (timenow - lastmousetime) * 1000);
                        mpoints.push(pps);
                        if (mpoints.length > mpoints_max)
                            mpoints.splice(0, 1);
                        mousetravel = 0;
                        $('#mousespeed-line').sparkline(mpoints,
                        {
                            type: 'line',
                            width: 210,
                            height: 40,
                            lineColor: myapp_get_color.info_500,
                            fillColor: myapp_get_color.info_50,
                            tooltipSuffix: ' pixels per second'
                        });
                        $('#mousespeed-bar').sparkline(mpoints,
                        {
                            type: 'bar',
                            height: 40,
                            tooltipSuffix: ' pixels per second'
                        });
                    }
                    lastmousetime = timenow;
                    setTimeout(mdraw, mrefreshinterval);
                }
                // we could use setInterval instead, but I prefer to do it this way
                setTimeout(mdraw, mrefreshinterval);
            };

            $(document).ready(function()
            {
                //start refresh chart
                drawMouseSpeedDemo();
            });

        </script>

        <!-- easypiechart bundle: 
		+ jquery.easypiechart.js (core)
		+ src/../jquery.easypiechart.config.js (config) -->
        <script src="/js/statistics/easypiechart/easypiechart.bundle.js"></script>
        <!-- Include a polyfill for ES6 Promises (optional) for IE11, UC Browser and Android browser support -->
        <script src="/js/notifications/sweetalert2/sweetalert2.bundle.js"></script>

        <script src="/js/jquery.redirect.js"></script>

        <script>
            var id;
            var poinType;
            var lat = 0.0;
            var long = 0.0;
            var positionError = false;
            console.log('Position error init =  ' + positionError);
                     
            function getLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(getPosition, showError,{enableHighAccuracy:true, timeout:60000, maximumAge:600000});
                } else {
                    positionError = true;
                    Swal.fire(
                    {
                        type: "error",
                        title: "Oops...",
                        text: "Désolé votre navigateur ne supporte pas la fonctionnalité de géolocalisation !",
                        {# footer: "<a href>Why do I have this issue?</a>" #}
                    });
                }
            }

            function getPosition(position) {
                lat = position.coords.latitude;
                long = position.coords.longitude;
                positionError = false;
                {# console.log('Type of latitude coordinates = ' + position.coords.latitude + ' is : ' + typeof position.coords.latitude );
                console.log('Type of longitude coordinates = ' + position.coords.longitude + ' is : ' + typeof position.coords.longitude );
                console.log('Position accuracy  = ' + position.coords.accuracy ); #}
                var pointingType_ = poinType === 'In' ? 'Entrée' : 'Sortie';
                var pointingType = poinType === 'In' ? "d'Entrée" : 'de Sortie';
                var _url = "{{ path('pointing_action') }}";
                
                var $data = JSON.stringify({
                    "type": poinType, // tabGridId,
                    "lat": lat,
                    "long": long
                });
                {# console.log('JSON data : ' + $data); #}

                Swal.mixin(
                {
                    customClass:
                    {
                        confirmButton: "btn btn-primary",
                        cancelButton: "btn btn-danger ml-2"
                    },
                    buttonsStyling: false
                }).queue([{
                        type: "warning",
                        title: 'Confirmation de Pointage',
                        confirmButtonText: 'Confirmez',
                        text: 'Êtes-vous sûre de vouloir pointer en ' + pointingType_ + ' ?',
                        showCancelButton: true,
                        showLoaderOnConfirm: true,
                        //confirmButtonClass: 'btn btn-primary',
                        //cancelButtonClass: 'btn btn-danger ml-2',
                        preConfirm: function () {
                            return new Promise(function (resolve) { 
                                {# console.log(resolve); #}
                                $.ajax({
                                    type: "POST", // method type
                                    contentType: "application/json; charset=utf-8",
                                    url: _url, // /Target function that will be return result
                                    data: $data, // parameter pass data is parameter name param is value
                                    dataType: "json",
                                    timeout: 120000, // 64241
                                    success: function (data) {
                                        // $('.fa-sync').removeClass('fa-spin');
                                        console.log(data);
                                        if(data.code === 200){
                                            {% if nbPointing <= 0 %}
                                            if($('#pointingIn').prop('disabled') == false){
                                                $('#pointingOut').attr("disabled",false);

                                            }
                                            {% endif %}
                                            $('#' + id).attr("disabled",true);
                                                
                                            Swal.fire("Succès !", "Votre Pointage " + pointingType + " a été bien pris en compte .", "success");
                                            /*Swal.fire({
                                                type: "success",
                                                position: 'top-end',
                                                title: "Succès !",
                                                text: "Votre Pointage " + pointingType + " a été bien en compte !",
                                                timer: 3000,
                                                timerProgressBar: true,
                                                footer: "<a href>Why do I have this issue?</a>"
                                            });*/
                                            setTimeout(function () {
                                                resolve()
                                            }, 5000);
                                        }
                                        else{
                                            Swal.fire({
                                                type: "error",
                                                title: "Oops...\r\n" + data.message,
                                                text: "Désolé votre Pointage " + pointingType + "  n'a pas été pris en compte !",
                                                footer: "<a href>Why do I have this issue?</a>"
                                            });
                                            $('#' + id).prop("checked",false);
                                        }

                                        
                                    },
                                    error: function (result) {
                                        //console.log("Error");
                                        console.log(result);
                                        /*Swal.fire('Oops...', 'Something went wrong!', 'error'
                                        // footer: '<a href>Why do I have this issue?</a>'
                                        );*/
                                        Swal.fire({
                                            type: "error",
                                            title: "Oops...500",
                                            text: "Désolé votre Pointage " + pointingType + "  n'a pas été pris en compte !",
                                            footer: "<a href>Why do I have this issue?</a>"
                                        });
                                        $('#' + id).prop("checked",false);
                                        
                                    }
                                });
                        })  
                    },
                    //allowOutsideClick: false
                    /*allowOutsideClick: function allowOutsideClick()
                    {
                        return !Swal.isLoading();
                    }*/
                }]).then((result) => {
                    if (result.isConfirmed) {
                        
                    }else if (
                        /* Read more about handling dismissals below */
                        result.dismiss === Swal.DismissReason.cancel
                    ) {
                        $('#' + id).prop("checked",false);
                        Swal.fire(
                        'Annulation',
                        'Pointage Annulé',
                        'error'
                        )
                    }
                });
            }

            function showError(error) {
                positionError = true;
                console.log("Handling Position Error");
                $('#' + id).prop("checked",false);
                switch(error.code) {
                    case error.PERMISSION_DENIED:
                        console.log("User denied the request for Geolocation.");
                        Swal.fire(
                        {
                            type: "error",
                            title: "Oops...\r\nAccès refusé !",
                            text: "Veuillez autoriser l'accès de votre position à l'application",
                            footer: "<a href='#'><i class='fa fa-exclamation-circle mr-1'></i>Why do I have this issue?</a>" 
                        });
                    break;
                    case error.POSITION_UNAVAILABLE:
                        console.log("Location information is unavailable.");
                        Swal.fire(
                        {
                            type: "error",
                            title: "Oops...",
                            text: "Désolé les informations de localisation sont indisponible !",
                            footer: "<a href='#'><i class='fa fa-exclamation-circle mr-1'></i>Why do I have this issue?</a>" 
                        });
                    break;
                    case error.TIMEOUT:
                        console.log("The request to get user location timed out.");
                        Swal.fire(
                        {
                            type: "error",
                            title: "Oops...",
                            text: "Temps d'attente de localisation expiré !",
                            footer: "<a href='#'><i class='fa fa-exclamation-circle mr-1'></i>Why do I have this issue?</a>" 
                        });
                    break;
                    case error.UNKNOWN_ERROR:
                        console.log("An unknown error occurred.");
                        Swal.fire(
                        {
                            type: "error",
                            title: "Oops...",
                            text: "Erreur de localisation inconnu !",
                            {# footer: "<a href>Why do I have this issue?</a>" #}
                        });
                    break;
                }
            }
                           
            $("input:checkbox[name=pointingInput]").change(function(){
                if ($(this).is(':checked')) {
                    var id_ = $(this).attr('id');
                    id = id_;
                    poinType = $(this).val();
                    {# console.log('attr : ' + $('#pointingIn').prop('disabled') );
                    console.log('attr : ' + $('#pointingOut').prop('disabled') );
                    console.log('Pointing ' + $(this).val() + ' Input Checked'); #}

                    //positionError = true;

                    //Récupération de la position de l'utilisateur
                    getLocation();

                    
                    {#if( positionError === false ){
                        var pointingType_ = $(this).val() === 'In' ? 'Entrée' : 'Sortie';
                        var pointingType = $(this).val() === 'In' ? "d'Entrée" : 'de Sortie';
                        var _url = "{{ path('pointing_action') }}";
                        
                        var $data = JSON.stringify({
                            "type": $(this).val(), // tabGridId,
                            "lat": lat,
                            "long": long
                        });
                        console.log('JSON data : ' + $data);

                        Swal.mixin(
                        {
                            customClass:
                            {
                                confirmButton: "btn btn-primary",
                                cancelButton: "btn btn-danger ml-2"
                            },
                            buttonsStyling: false
                        }).queue([{
                                type: "warning",
                                title: 'Confirmation de Pointage',
                                confirmButtonText: 'Confirmez',
                                text: 'Etes-vous sûre de vouloir pointer en ' + pointingType_ + ' ?',
                                showCancelButton: true,
                                showLoaderOnConfirm: true,
                                //confirmButtonClass: 'btn btn-primary',
                                //cancelButtonClass: 'btn btn-danger ml-2',
                                preConfirm: function () {
                                    return new Promise(function (resolve) { 
                                        
                                        $.ajax({
                                            type: "POST", // method type
                                            contentType: "application/json; charset=utf-8",
                                            url: _url, // /Target function that will be return result
                                            data: $data, // parameter pass data is parameter name param is value
                                            dataType: "json",
                                            timeout: 120000, // 64241
                                            success: function (data) {
                                                // $('.fa-sync').removeClass('fa-spin');
                                                //console.log(data);
                                                {% if nbPointing <= 0 %}
                                                if($('#pointingIn').prop('disabled') == false){
                                                    $('#pointingOut').attr("disabled",false);

                                                }
                                                {% endif %}
                                                $('#' + id).attr("disabled",true);
                                                Swal.fire("Succès !", "Votre Pointage " + pointingType + " a été bien en compte .", "success");

                                            setTimeout(function () {
                                                resolve()
                                            }, 5000);
                                        },
                                        error: function (result) {
                                            //console.log("Error");
                                            // console.log(result);
                                            /*Swal.fire('Oops...', 'Something went wrong!', 'error'
                                            // footer: '<a href>Why do I have this issue?</a>'
                                            );*/
                                            Swal.fire(
                                            {
                                                type: "error",
                                                title: "Oops...",
                                                text: "Désolé votre Pointage " + pointingType + "  n'a pas été pris en compte ! : " + lat + ", " + long,
                                                # footer: "<a href>Why do I have this issue?</a>" #
                                            });
                                            $('#' + id).prop("checked",false);
                                            setTimeout(function () {
                                                resolve()
                                            }, 5000);
                                        }
                                    });
                                })
                            },
                            //allowOutsideClick: false
                            /*allowOutsideClick: function allowOutsideClick()
                            {
                                return !Swal.isLoading();
                            }*/
                        }]); 

                    }
                    else{
                        console.log('Unchecked for Position error ');
                        
                    }#}
                   
                }
            });

            {% if app.user.roles[0] == 'ROLE_USER' %}
            $('#continueLink').click(function(){
                var now = new Date();
                var date = now.getFullYear()+'-'+(now.getMonth()+1);
                //console.log('empId = ' + $(this).data("emp"));
                //console.log('date = ' + date);
                $.redirect("{{path('employee_month_attendance_sheet',{'id':app.user.id})}}",
                    {
                        params: {'date':date},
                        
                    },
                "POST", "");
            })
            {% endif %}

        </script>
    </body>
</html>